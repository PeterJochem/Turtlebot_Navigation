<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="diff_drive">

<!-- Load the robot geometry from the yaml file -->
<xacro:property name="yaml_file" value="$(find nuturtle_description)/config/diff_params.yaml" />
<xacro:property name="props" value="${load_yaml(yaml_file)}"/>

<!-- Define xacro tags for each item in the yaml file -->
<xacro:property name="wheel_width" value="${props['wheel_width']}" />
<xacro:property name="wheel_radius" value="${props['wheel_radius']}" />
<xacro:property name="wheel_base" value="${props['wheel_base']}" />
<xacro:property name="chassis_length" value="${props['chassis_length']}" />
<xacro:property name="chassis_thickness" value="${props['chassis_thickness']}" />
<xacro:property name="caster_radius" value="${(wheel_radius - (chassis_thickness/2.0)) / 2}" />


<!-- the movable body -->
<link name="base_link">
	<visual>
		<geometry>
			<box size="${chassis_length} ${wheel_base} ${chassis_thickness}" />
		</geometry>
		<material name="red_mat">
			<color rgba="0 0 0.1 0.4" />
		</material>
		<origin rpy="0 0 0" xyz="${chassis_length/2 - wheel_radius} 0.0 0.0"/>
	</visual>
</link>

<link name="caster">
        <visual>
                <geometry>
			<sphere radius="${caster_radius}" />
                </geometry>
                <material name="red_mat">
                        <color rgba="0 1 0 0.4" />
                </material>
                <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
        </visual>
</link>

<link name="left_wheel">
	<visual>
		<origin xyz="0.0 0.0 0.0" rpy="${3.14/2} 0.0 0" />
		<geometry>
			<cylinder radius="${wheel_radius}" length="${wheel_width}" />
		</geometry>
		<material name="blue_mat">
			<color rgba="0 0 1 0.4" />
		</material>
	</visual>
</link>

<link name="right_wheel">
	<visual>
		<origin xyz="0.0 0.0 0.0" rpy="${3.14/2} 0.0 0.0" />
		
		<geometry>
			<cylinder radius="${wheel_radius}" length="${wheel_width}" />
		</geometry>
		<material name="blue_mat">
			<color rgba="0 0 1 0.4" />
		</material>
	</visual>
</link>

  <!-- Link body to base frame -->
  <joint name="base_caster" type="fixed">
	  <origin xyz="${ (-1 * wheel_radius + chassis_length) - (caster_radius)  } 0 ${(-1 * wheel_radius) + (wheel_radius - chassis_thickness/2.0) / 2.0}" rpy="0 0 0" />
          <parent link="base_link"/>
          <child link="caster"/>
  </joint>


  <joint name="left_wheel_axle" type="continuous">
	  <origin xyz="0.0 ${wheel_base/2} 0.0" rpy="0 0 0" />
	  <axis xyz = "0 1 0" />
	  <parent link="base_link" />
	  <child link="left_wheel" />
	  <limit velocity="1.0" effort="10" lower="0" upper="180"/>

  </joint>

  <joint name="right_wheel_axle" type="continuous">
	  <origin xyz="0.0 ${-1 * wheel_base/2} 0.0" rpy="0 0 0" />
	  <axis xyz = "0 1 0" />
	  <parent link="base_link" />
	  <child link="right_wheel" />
	  <limit velocity="1.0" effort="10" lower="0" upper="180"/>
  </joint>

</robot>

